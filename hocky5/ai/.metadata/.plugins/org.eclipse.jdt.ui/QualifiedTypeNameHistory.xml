<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.lang.NullPointerException"/>
    <fullyQualifiedTypeName name="BFS_DFS.Node"/>
    <fullyQualifiedTypeName name="inform.a_star.IInformedSearchAlgo"/>
    <fullyQualifiedTypeName name="inform.a_star.Edge"/>
    <fullyQualifiedTypeName name="inform.IInformedSearchAlgo"/>
    <fullyQualifiedTypeName name="inform.GreedyBestFirstSearchAlgo"/>
    <fullyQualifiedTypeName name="inform.NodeUtils"/>
    <fullyQualifiedTypeName name="inform.Node"/>
    <fullyQualifiedTypeName name="inform.AStarSearchAlgo"/>
    <fullyQualifiedTypeName name="inform.Edge"/>
    <fullyQualifiedTypeName name="inform.AStarSearchAlgo.NodeComparatorByAStar"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="student.Puzzle"/>
    <fullyQualifiedTypeName name="student.PuzzleUtils"/>
    <fullyQualifiedTypeName name="student.IPuzzleAlgo"/>
    <fullyQualifiedTypeName name="java.util.PriorityQueue"/>
    <fullyQualifiedTypeName name="puzzle.PuzzleUtils"/>
    <fullyQualifiedTypeName name="puzzle.Node"/>
    <fullyQualifiedTypeName name="puzzle.Puzzle"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="algo.AStarPuzzleAlgo"/>
    <fullyQualifiedTypeName name="algo.GreedyBestFirstSearchPuzzle"/>
    <fullyQualifiedTypeName name="algo.UniformCostSearchPuzzle"/>
    <fullyQualifiedTypeName name="java.util.Stack"/>
    <fullyQualifiedTypeName name="algo.DFSPuzzleAlgo"/>
    <fullyQualifiedTypeName name="algo.IPuzzleAlgo"/>
    <fullyQualifiedTypeName name="java.util.Queue"/>
    <fullyQualifiedTypeName name="java.util.LinkedList"/>
    <fullyQualifiedTypeName name="algo.BFSPuzzleAlgo"/>
    <fullyQualifiedTypeName name="queen.Test"/>
    <fullyQualifiedTypeName name="queen.Queen"/>
    <fullyQualifiedTypeName name="queen.SAAlgo"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="java.lang.Comparable"/>
    <fullyQualifiedTypeName name="queen.HillClimbingAlgo"/>
    <fullyQualifiedTypeName name="queen.SAAlgo_NQueen"/>
    <fullyQualifiedTypeName name="queen.Node"/>
    <fullyQualifiedTypeName name="GA.GA_NQueenAlgo"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="GA.Node"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="AlphaBeta.AlphaBetaSearchAlgo"/>
    <fullyQualifiedTypeName name="java.util.Comparator"/>
    <fullyQualifiedTypeName name="AlphaBeta.Node"/>
    <fullyQualifiedTypeName name="java.lang.StringBuilder"/>
    <fullyQualifiedTypeName name="AlphaBeta.AlphaBetaRightToLeftSearchAlgo"/>
    <fullyQualifiedTypeName name="AlphaBeta.ISearchAlgo"/>
    <fullyQualifiedTypeName name="AlphaBeta.MiniMaxSearchAlgo"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="game_nim.Node"/>
</qualifiedTypeNameHistroy>
