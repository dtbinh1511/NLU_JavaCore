package data_input_stream;

import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Iterator;

public class BaiTap {
// pack
	public boolean pack(String sFolder, String archiveName) throws IOException {
		File dir = new File(sFolder);
		if (!dir.exists())
			return false;
		if (dir.isDirectory()) {
			File[] contents = dir.listFiles();
			if (contents != null) {

				DataOutputStream dos = new DataOutputStream(new FileOutputStream(archiveName));
				int byteRead;
				byte[] data = new byte[102400];

				dos.writeInt(contents.length);

				for (File file : contents) {
					dos.writeUTF(file.getName());
					dos.writeLong(file.length());
					BufferedInputStream bis = new BufferedInputStream(new FileInputStream(file));

					while ((byteRead = bis.read(data)) != -1)
						dos.write(data, 0, byteRead);
					bis.close();
				}
				dos.close();
			}

		}

		return true;
	}

	// unpack
	public boolean unpack(String destFolder, String archiveName) throws IOException {
		File file = new File(archiveName);
		if (!file.exists())
			return false;
		DataInputStream bis = new DataInputStream(new FileInputStream(archiveName));
		int length = bis.readInt();
		for (int i = 0; i < length; i++) {

		}
		return true;
	}

	private void writable(BufferedInputStream bis, DataOutputStream dos) throws IOException {

	}

	public void unpack(String pathName) {

	}
}
